=============================
how to use 2-matrix_divide.py
=============================

This module defines a function matrix_divide``matrix_divided(matrix, div)``.

usage
=====
``matrix_divided(...)```returns a new matrix(a list of lists)from a matrix that has been divided by a divisor``div``

"""
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_x = [[2, 6, 8], [4, 6, 10]]
>>> div = 2
>>> matrix_divided = matrix_divided(matrix_x, div)
>>> matrix_divided
[[1.0, 3.0, 4.0], [2.0, 3.0, 5.0]]

# The function also works with floating point values

 matrix_y = [[6.4, 10, 6], [4.5, 7, 8]]
>>> div = 3
>>> matrix_divided = matrix_divided(matrix_y, div)
>>> matrix_divided
[[2.13, 3.33, 2.0], [1.5, 2.33, 2.67]]

# it throws a  TypeError if one row in the matrix is longer than the other

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_z = [[5, 4, 6, 8], [2, 3]]
>>> div = 2
>>> matrix_divided = matrix_divided(matrix_z, div)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: Each row of the matrix must have the same size

# it throws a TypeError if matrix is not a list of integers or floats

>>> matrix = [["list", "value", 4], ['a', 45, "matrix"]]
>>> div = 3
>>> matrix_divided = matrix_divided(matrix, div)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix must be a matrix (list of lists) of integers/floats
"""
